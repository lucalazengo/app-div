{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport MapView, { Marker, Callout, PROVIDER_GOOGLE } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MapScreen = function MapScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentLocation = _useState2[0],\n    setCurrentLocation = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    destination = _useState4[0],\n    setDestination = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    routeCoordinates = _useState6[0],\n    setRouteCoordinates = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    duration = _useState8[0],\n    setDuration = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isRouteOpen = _useState10[0],\n    setIsRouteOpen = _useState10[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        setErrorMsg('Permissão para acessar a localização é necessária!');\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({});\n      setCurrentLocation({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude\n      });\n    })();\n  }, []);\n  var handleLocationInput = function () {\n    var _ref2 = _asyncToGenerator(function* (input) {\n      var location = yield Location.geocodeAsync(input);\n      setDestination({\n        latitude: location[0].latitude,\n        longitude: location[0].longitude\n      });\n    });\n    return function handleLocationInput(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleGetDirections = function () {\n    var _ref3 = _asyncToGenerator(function* () {});\n    return function handleGetDirections() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleStartRoute = function handleStartRoute() {\n    setIsRouteOpen(true);\n  };\n  var handleFinishRoute = function handleFinishRoute() {\n    setIsRouteOpen(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(MapView, {\n      style: styles.map,\n      provider: PROVIDER_GOOGLE,\n      initialRegion: currentLocation,\n      showsUserLocation: true,\n      children: [destination && _jsx(Marker, {\n        coordinate: destination,\n        title: \"Destino\"\n      }), isRouteOpen && routeCoordinates.length > 0 && _jsx(Polyline, {\n        coordinates: routeCoordinates,\n        strokeWidth: 4,\n        strokeColor: \"blue\"\n      })]\n    }), _jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: handleLocationInput,\n        placeholder: \"Insira o destino\"\n      }), _jsx(Button, {\n        title: \"Escolher Destino\",\n        onPress: handleGetDirections,\n        style: styles.button\n      })]\n    }), isRouteOpen && destination && _jsxs(View, {\n      style: styles.routeContainer,\n      children: [_jsxs(Text, {\n        children: [\"Tempo estimado de viagem: \", duration]\n      }), _jsx(Button, {\n        title: \"Iniciar Rota\",\n        onPress: handleStartRoute,\n        style: styles.button\n      }), _jsx(Button, {\n        title: \"Fim da Rota\",\n        onPress: handleFinishRoute,\n        style: styles.button\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: '100%',\n    height: '100%',\n    padding: 15,\n    bottom: 130\n  },\n  searchContainer: {\n    justifyContent: \"center\",\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 20\n  },\n  input: {\n    borderWidth: 2,\n    borderColor: 'gray',\n    padding: 10,\n    width: '80%',\n    bottom: 100\n  },\n  routeContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#0000'\n  },\n  button: {\n    marginVertical: 10,\n    backgroundColor: '#0000',\n    padding: 10,\n    borderRadius: 5,\n    width: '80%'\n  }\n});\nexport default MapScreen;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","Button","TouchableOpacity","TextInput","MapView","Marker","Callout","PROVIDER_GOOGLE","Location","jsx","_jsx","jsxs","_jsxs","MapScreen","_useState","_useState2","_slicedToArray","currentLocation","setCurrentLocation","_useState3","_useState4","destination","setDestination","_useState5","_useState6","routeCoordinates","setRouteCoordinates","_useState7","_useState8","duration","setDuration","_useState9","_useState10","isRouteOpen","setIsRouteOpen","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","setErrorMsg","location","getCurrentPositionAsync","latitude","coords","longitude","handleLocationInput","_ref2","input","geocodeAsync","_x","apply","arguments","handleGetDirections","_ref3","handleStartRoute","handleFinishRoute","style","styles","container","children","map","provider","initialRegion","showsUserLocation","coordinate","title","length","Polyline","coordinates","strokeWidth","strokeColor","searchContainer","onChangeText","placeholder","onPress","button","routeContainer","create","flex","backgroundColor","alignItems","justifyContent","width","height","padding","bottom","marginBottom","borderWidth","borderColor","marginVertical","borderRadius"],"sources":["C:/Users/U369/app-div/src/pages/mapscreen/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, TextInput } from 'react-native';\r\nimport MapView, { Marker, Callout, PROVIDER_GOOGLE } from 'react-native-maps';\r\nimport * as Location from 'expo-location';\r\n\r\n\r\nconst MapScreen= () => {\r\n const [currentLocation, setCurrentLocation] = useState(null);\r\n const [destination, setDestination] = useState(null);\r\n const [routeCoordinates, setRouteCoordinates] = useState([]);\r\n const [duration, setDuration] = useState(null);\r\n const [isRouteOpen, setIsRouteOpen] = useState(false);\r\n\r\n useEffect(() => {\r\n    (async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        setErrorMsg('Permissão para acessar a localização é necessária!');\r\n        return;\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setCurrentLocation({ latitude: location.coords.latitude, longitude: location.coords.longitude });\r\n    })();\r\n }, []);\r\n\r\n const handleLocationInput = async (input) => {\r\n    let location = await Location.geocodeAsync(input);\r\n    setDestination({ latitude: location[0].latitude, longitude: location[0].longitude });\r\n };\r\n\r\n const handleGetDirections = async () => {\r\n    // Aqui você pode adicionar sua lógica para obter a rota entre os dois pontos.\r\n    // Expo não fornece um método pronto para uso, mas você pode usar bibliotecas externas, como expo-google-app-auth\r\n };\r\n\r\n const handleStartRoute = () => {\r\n    setIsRouteOpen(true);\r\n };\r\n\r\n const handleFinishRoute = () => {\r\n    setIsRouteOpen(false);\r\n };\r\n\r\n return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        style={styles.map}\r\n        provider={PROVIDER_GOOGLE}\r\n        initialRegion={currentLocation}\r\n        showsUserLocation\r\n      >\r\n        {destination && (\r\n          <Marker coordinate={destination} title=\"Destino\" />\r\n        )}\r\n        {isRouteOpen && routeCoordinates.length > 0 && (\r\n          <Polyline coordinates={routeCoordinates} strokeWidth={4} strokeColor=\"blue\" />\r\n        )}\r\n      </MapView>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput style={styles.input} onChangeText={handleLocationInput} placeholder=\"Insira o destino\" />\r\n        <Button title=\"Escolher Destino\" onPress={handleGetDirections} style={styles.button} />\r\n      </View>\r\n      {isRouteOpen && destination && (\r\n        <View style={styles.routeContainer}>\r\n          <Text>Tempo estimado de viagem: {duration}</Text>\r\n          <Button title=\"Iniciar Rota\" onPress={handleStartRoute}style={styles.button} />\r\n          <Button title=\"Fim da Rota\" onPress={handleFinishRoute} style={styles.button}/>\r\n        </View>\r\n      )}\r\n    </View>\r\n );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n },\r\n map: {\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: 15,\r\n    bottom: 130,\r\n },\r\n searchContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    marginBottom: 20,\r\n },\r\n input: {\r\n    borderWidth: 2,\r\n    borderColor: 'gray',\r\n    padding: 10,\r\n    width: '80%',\r\n    bottom: 100,\r\n },\r\n routeContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#0000'\r\n },\r\n button: {\r\n  marginVertical: 10,\r\n  backgroundColor: '#0000',\r\n  padding: 10,\r\n  borderRadius: 5,\r\n  width: '80%',\r\n},\r\n});\r\nexport default MapScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}