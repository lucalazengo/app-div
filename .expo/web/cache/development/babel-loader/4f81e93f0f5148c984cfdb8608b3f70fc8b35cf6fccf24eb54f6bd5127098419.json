{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport MapView, { Marker, Polyline } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Location from 'expo-location';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function MapScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    coordinates = _useState4[0],\n    setCoordinates = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isRouteActive = _useState6[0],\n    setIsRouteActive = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    destination = _useState8[0],\n    setDestination = _useState8[1];\n  useEffect(function () {\n    ;\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        console.error('Permissão para acessar a localização negada');\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({});\n      setLocation(location.coords);\n      var subscription = yield Location.watchPositionAsync({\n        accuracy: Location.Accuracy.High,\n        timeInterval: 1000,\n        distanceInterval: 10\n      }, function (newLocation) {\n        if (isRouteActive) {\n          setCoordinates(function (prevCoords) {\n            return [].concat(_toConsumableArray(prevCoords), [newLocation.coords]);\n          });\n        }\n      });\n      return function () {\n        if (subscription) {\n          subscription.remove();\n        }\n      };\n    })();\n  }, [isRouteActive]);\n  var startRoute = function startRoute() {\n    setCoordinates([]);\n    setIsRouteActive(true);\n  };\n  var stopRoute = function stopRoute() {\n    setIsRouteActive(false);\n  };\n  var handleSelectDestination = function () {\n    var _ref2 = _asyncToGenerator(function* (data, details) {\n      try {\n        var startLocation = `${location.latitude},${location.longitude}`;\n        var endLocation = `${details.geometry.location.lat},${details.geometry.location.lng}`;\n        var apiKey = 'SUA_CHAVE_DA_API_DO_GOOGLE';\n        var response = yield fetch(`https://maps.googleapis.com/maps/api/directions/json?origin=${startLocation}&destination=${endLocation}&key=${apiKey}`);\n        var result = yield response.json();\n        if (result.status === 'OK') {\n          setDestination({\n            latitude: details.geometry.location.lat,\n            longitude: details.geometry.location.lng,\n            name: details.formatted_address\n          });\n          startRoute();\n        } else {\n          Alert.alert('Erro', 'Não foi possível calcular a rota. Por favor, tente novamente.');\n        }\n      } catch (error) {\n        console.error('Erro ao calcular a rota:', error);\n      }\n    });\n    return function handleSelectDestination(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: location && _jsxs(_Fragment, {\n      children: [_jsxs(MapView, {\n        style: styles.map,\n        initialRegion: _objectSpread(_objectSpread({}, location), {}, {\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        }),\n        children: [_jsx(Marker, {\n          coordinate: location,\n          title: \"Localiza\\xE7\\xE3o Atual\"\n        }), isRouteActive && _jsx(Polyline, {\n          coordinates: coordinates,\n          strokeWidth: 4,\n          strokeColor: \"blue\"\n        }), destination && _jsx(Marker, {\n          coordinate: destination,\n          title: \"Destino\"\n        })]\n      }), !isRouteActive && _jsxs(View, {\n        style: styles.destinationInputContainer,\n        children: [_jsx(GooglePlacesAutocomplete, {\n          placeholder: \"Digite o destino\",\n          onPress: handleSelectDestination,\n          query: {\n            key: 'AIzaSyDevAuVwiMi3DTNcKcMquHV2I-_EzjmJz8',\n            language: 'pt-BR'\n          },\n          styles: {\n            container: {\n              flex: 0\n            },\n            textInputContainer: {\n              backgroundColor: 'rgba(0,0,0,0)',\n              borderTopWidth: 0,\n              borderBottomWidth: 0\n            },\n            textInput: {\n              marginLeft: 0,\n              marginRight: 0,\n              height: 38,\n              color: '#5d5d5d',\n              fontSize: 16\n            },\n            predefinedPlacesDescription: {\n              color: '#1faadb'\n            }\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: startRoute,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Iniciar Rota\"\n          })\n        })]\n      }), isRouteActive && _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: stopRoute,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Parar Rota\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: '100%',\n    height: '100%',\n    bottom: 140,\n    padding: 15\n  },\n  buttonContainer: {\n    position: 'absolute',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center'\n  },\n  destinationInputContainer: {\n    position: 'absolute',\n    top: 20,\n    width: '100%',\n    alignItems: 'center'\n  },\n  button: {\n    backgroundColor: '#510E16',\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","MapView","Marker","Polyline","StyleSheet","View","TouchableOpacity","TextInput","Alert","Text","Location","GooglePlacesAutocomplete","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MapScreen","_useState","_useState2","_slicedToArray","location","setLocation","_useState3","_useState4","coordinates","setCoordinates","_useState5","_useState6","isRouteActive","setIsRouteActive","_useState7","_useState8","destination","setDestination","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","console","error","getCurrentPositionAsync","coords","subscription","watchPositionAsync","accuracy","Accuracy","High","timeInterval","distanceInterval","newLocation","prevCoords","concat","_toConsumableArray","remove","startRoute","stopRoute","handleSelectDestination","_ref2","data","details","startLocation","latitude","longitude","endLocation","geometry","lat","lng","apiKey","response","fetch","result","json","name","formatted_address","alert","_x","_x2","apply","arguments","style","styles","container","children","map","initialRegion","_objectSpread","latitudeDelta","longitudeDelta","coordinate","title","strokeWidth","strokeColor","destinationInputContainer","placeholder","onPress","query","key","language","flex","textInputContainer","backgroundColor","borderTopWidth","borderBottomWidth","textInput","marginLeft","marginRight","height","color","fontSize","predefinedPlacesDescription","button","buttonText","buttonContainer","create","alignItems","justifyContent","width","bottom","padding","position","top","paddingVertical","paddingHorizontal","borderRadius","marginTop","fontWeight"],"sources":["C:/Users/Eddyr/Documents/app-div/src/pages/mapscreen/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MapView, { Marker, Polyline } from 'react-native-maps'\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Alert,\r\n  Text,\r\n} from 'react-native'\r\nimport * as Location from 'expo-location'\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete'\r\n\r\nexport default function MapScreen() {\r\n  const [location, setLocation] = useState(null)\r\n  const [coordinates, setCoordinates] = useState([])\r\n  const [isRouteActive, setIsRouteActive] = useState(false)\r\n  const [destination, setDestination] = useState(null)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      const { status } = await Location.requestForegroundPermissionsAsync()\r\n      if (status !== 'granted') {\r\n        console.error('Permissão para acessar a localização negada')\r\n        return\r\n      }\r\n\r\n      const location = await Location.getCurrentPositionAsync({})\r\n      setLocation(location.coords)\r\n\r\n      const subscription = await Location.watchPositionAsync(\r\n        {\r\n          accuracy: Location.Accuracy.High,\r\n          timeInterval: 1000,\r\n          distanceInterval: 10,\r\n        },\r\n        (newLocation) => {\r\n          if (isRouteActive) {\r\n            setCoordinates((prevCoords) => [...prevCoords, newLocation.coords])\r\n          }\r\n        },\r\n      )\r\n\r\n      return () => {\r\n        if (subscription) {\r\n          subscription.remove()\r\n        }\r\n      }\r\n    })()\r\n  }, [isRouteActive])\r\n\r\n  const startRoute = () => {\r\n    setCoordinates([])\r\n    setIsRouteActive(true)\r\n  }\r\n\r\n  const stopRoute = () => {\r\n    setIsRouteActive(false)\r\n  }\r\n\r\n  const handleSelectDestination = async (data, details) => {\r\n    try {\r\n      const startLocation = `${location.latitude},${location.longitude}`\r\n      const endLocation = `${details.geometry.location.lat},${details.geometry.location.lng}`\r\n\r\n      const apiKey = 'SUA_CHAVE_DA_API_DO_GOOGLE'\r\n\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/directions/json?origin=${startLocation}&destination=${endLocation}&key=${apiKey}`,\r\n      )\r\n\r\n      const result = await response.json()\r\n\r\n      if (result.status === 'OK') {\r\n        setDestination({\r\n          latitude: details.geometry.location.lat,\r\n          longitude: details.geometry.location.lng,\r\n          name: details.formatted_address,\r\n        })\r\n\r\n        startRoute()\r\n      } else {\r\n        Alert.alert(\r\n          'Erro',\r\n          'Não foi possível calcular a rota. Por favor, tente novamente.',\r\n        )\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao calcular a rota:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {location && (\r\n        <>\r\n          <MapView\r\n            style={styles.map}\r\n            initialRegion={{\r\n              ...location,\r\n              latitudeDelta: 0.0922,\r\n              longitudeDelta: 0.0421,\r\n            }}\r\n          >\r\n            <Marker coordinate={location} title=\"Localização Atual\" />\r\n            {isRouteActive && (\r\n              <Polyline\r\n                coordinates={coordinates}\r\n                strokeWidth={4}\r\n                strokeColor=\"blue\"\r\n              />\r\n            )}\r\n            {destination && <Marker coordinate={destination} title=\"Destino\" />}\r\n          </MapView>\r\n          {!isRouteActive && (\r\n            <View style={styles.destinationInputContainer}>\r\n              <GooglePlacesAutocomplete\r\n                placeholder=\"Digite o destino\"\r\n                onPress={handleSelectDestination}\r\n                query={{\r\n                  key: 'AIzaSyDevAuVwiMi3DTNcKcMquHV2I-_EzjmJz8',\r\n                  language: 'pt-BR',\r\n                }}\r\n                styles={{\r\n                  container: {\r\n                    flex: 0,\r\n                  },\r\n                  textInputContainer: {\r\n                    backgroundColor: 'rgba(0,0,0,0)',\r\n                    borderTopWidth: 0,\r\n                    borderBottomWidth: 0,\r\n                  },\r\n                  textInput: {\r\n                    marginLeft: 0,\r\n                    marginRight: 0,\r\n                    height: 38,\r\n                    color: '#5d5d5d',\r\n                    fontSize: 16,\r\n                  },\r\n                  predefinedPlacesDescription: {\r\n                    color: '#1faadb',\r\n                  },\r\n                }}\r\n              />\r\n              <TouchableOpacity style={styles.button} onPress={startRoute}>\r\n                <Text style={styles.buttonText}>Iniciar Rota</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n          {isRouteActive && (\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity style={styles.button} onPress={stopRoute}>\r\n                <Text style={styles.buttonText}>Parar Rota</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        </>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  map: {\r\n    width: '100%',\r\n    height: '100%',\r\n    bottom: 140,\r\n    padding: 15,\r\n  },\r\n  buttonContainer: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  destinationInputContainer: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: '#510E16',\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n})\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAS7D,OAAO,KAAKC,QAAQ,MAAM,eAAe;AACzC,SAASC,wBAAwB,QAAQ,yCAAyC;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElF,eAAe,SAASC,SAASA,CAAA,EAAG;EAClC,IAAAC,SAAA,GAAgCpB,QAAQ,CAAC,IAAI,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAsCzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAA0C7B,QAAQ,CAAC,KAAK,CAAC;IAAA8B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAlDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAsCjC,QAAQ,CAAC,IAAI,CAAC;IAAAkC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA7CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElCjC,SAAS,CAAC,YAAM;IACd;IAACoC,iBAAA,CAAC,aAAY;MACZ,IAAAC,qBAAA,SAAyB3B,QAAQ,CAAC4B,iCAAiC,CAAC,CAAC;QAA7DC,MAAM,GAAAF,qBAAA,CAANE,MAAM;MACd,IAAIA,MAAM,KAAK,SAAS,EAAE;QACxBC,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC;QAC5D;MACF;MAEA,IAAMnB,QAAQ,SAASZ,QAAQ,CAACgC,uBAAuB,CAAC,CAAC,CAAC,CAAC;MAC3DnB,WAAW,CAACD,QAAQ,CAACqB,MAAM,CAAC;MAE5B,IAAMC,YAAY,SAASlC,QAAQ,CAACmC,kBAAkB,CACpD;QACEC,QAAQ,EAAEpC,QAAQ,CAACqC,QAAQ,CAACC,IAAI;QAChCC,YAAY,EAAE,IAAI;QAClBC,gBAAgB,EAAE;MACpB,CAAC,EACD,UAACC,WAAW,EAAK;QACf,IAAIrB,aAAa,EAAE;UACjBH,cAAc,CAAC,UAACyB,UAAU;YAAA,UAAAC,MAAA,CAAAC,kBAAA,CAASF,UAAU,IAAED,WAAW,CAACR,MAAM;UAAA,CAAC,CAAC;QACrE;MACF,CACF,CAAC;MAED,OAAO,YAAM;QACX,IAAIC,YAAY,EAAE;UAChBA,YAAY,CAACW,MAAM,CAAC,CAAC;QACvB;MACF,CAAC;IACH,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,CAACzB,aAAa,CAAC,CAAC;EAEnB,IAAM0B,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB7B,cAAc,CAAC,EAAE,CAAC;IAClBI,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,IAAM0B,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtB1B,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,IAAM2B,uBAAuB;IAAA,IAAAC,KAAA,GAAAvB,iBAAA,CAAG,WAAOwB,IAAI,EAAEC,OAAO,EAAK;MACvD,IAAI;QACF,IAAMC,aAAa,GAAI,GAAExC,QAAQ,CAACyC,QAAS,IAAGzC,QAAQ,CAAC0C,SAAU,EAAC;QAClE,IAAMC,WAAW,GAAI,GAAEJ,OAAO,CAACK,QAAQ,CAAC5C,QAAQ,CAAC6C,GAAI,IAAGN,OAAO,CAACK,QAAQ,CAAC5C,QAAQ,CAAC8C,GAAI,EAAC;QAEvF,IAAMC,MAAM,GAAG,4BAA4B;QAE3C,IAAMC,QAAQ,SAASC,KAAK,CACzB,+DAA8DT,aAAc,gBAAeG,WAAY,QAAOI,MAAO,EACxH,CAAC;QAED,IAAMG,MAAM,SAASF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAEpC,IAAID,MAAM,CAACjC,MAAM,KAAK,IAAI,EAAE;UAC1BJ,cAAc,CAAC;YACb4B,QAAQ,EAAEF,OAAO,CAACK,QAAQ,CAAC5C,QAAQ,CAAC6C,GAAG;YACvCH,SAAS,EAAEH,OAAO,CAACK,QAAQ,CAAC5C,QAAQ,CAAC8C,GAAG;YACxCM,IAAI,EAAEb,OAAO,CAACc;UAChB,CAAC,CAAC;UAEFnB,UAAU,CAAC,CAAC;QACd,CAAC,MAAM;UACLhD,KAAK,CAACoE,KAAK,CACT,MAAM,EACN,+DACF,CAAC;QACH;MACF,CAAC,CAAC,OAAOnC,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAAA,gBA9BKiB,uBAAuBA,CAAAmB,EAAA,EAAAC,GAAA;MAAA,OAAAnB,KAAA,CAAAoB,KAAA,OAAAC,SAAA;IAAA;EAAA,GA8B5B;EAED,OACEnE,IAAA,CAACR,IAAI;IAAC4E,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC3B9D,QAAQ,IACPP,KAAA,CAAAE,SAAA;MAAAmE,QAAA,GACErE,KAAA,CAACd,OAAO;QACNgF,KAAK,EAAEC,MAAM,CAACG,GAAI;QAClBC,aAAa,EAAAC,aAAA,CAAAA,aAAA,KACRjE,QAAQ;UACXkE,aAAa,EAAE,MAAM;UACrBC,cAAc,EAAE;QAAM,EACtB;QAAAL,QAAA,GAEFvE,IAAA,CAACX,MAAM;UAACwF,UAAU,EAAEpE,QAAS;UAACqE,KAAK,EAAC;QAAmB,CAAE,CAAC,EACzD7D,aAAa,IACZjB,IAAA,CAACV,QAAQ;UACPuB,WAAW,EAAEA,WAAY;UACzBkE,WAAW,EAAE,CAAE;UACfC,WAAW,EAAC;QAAM,CACnB,CACF,EACA3D,WAAW,IAAIrB,IAAA,CAACX,MAAM;UAACwF,UAAU,EAAExD,WAAY;UAACyD,KAAK,EAAC;QAAS,CAAE,CAAC;MAAA,CAC5D,CAAC,EACT,CAAC7D,aAAa,IACbf,KAAA,CAACV,IAAI;QAAC4E,KAAK,EAAEC,MAAM,CAACY,yBAA0B;QAAAV,QAAA,GAC5CvE,IAAA,CAACF,wBAAwB;UACvBoF,WAAW,EAAC,kBAAkB;UAC9BC,OAAO,EAAEtC,uBAAwB;UACjCuC,KAAK,EAAE;YACLC,GAAG,EAAE,yCAAyC;YAC9CC,QAAQ,EAAE;UACZ,CAAE;UACFjB,MAAM,EAAE;YACNC,SAAS,EAAE;cACTiB,IAAI,EAAE;YACR,CAAC;YACDC,kBAAkB,EAAE;cAClBC,eAAe,EAAE,eAAe;cAChCC,cAAc,EAAE,CAAC;cACjBC,iBAAiB,EAAE;YACrB,CAAC;YACDC,SAAS,EAAE;cACTC,UAAU,EAAE,CAAC;cACbC,WAAW,EAAE,CAAC;cACdC,MAAM,EAAE,EAAE;cACVC,KAAK,EAAE,SAAS;cAChBC,QAAQ,EAAE;YACZ,CAAC;YACDC,2BAA2B,EAAE;cAC3BF,KAAK,EAAE;YACT;UACF;QAAE,CACH,CAAC,EACFhG,IAAA,CAACP,gBAAgB;UAAC2E,KAAK,EAAEC,MAAM,CAAC8B,MAAO;UAAChB,OAAO,EAAExC,UAAW;UAAA4B,QAAA,EAC1DvE,IAAA,CAACJ,IAAI;YAACwE,KAAK,EAAEC,MAAM,CAAC+B,UAAW;YAAA7B,QAAA,EAAC;UAAY,CAAM;QAAC,CACnC,CAAC;MAAA,CACf,CACP,EACAtD,aAAa,IACZjB,IAAA,CAACR,IAAI;QAAC4E,KAAK,EAAEC,MAAM,CAACgC,eAAgB;QAAA9B,QAAA,EAClCvE,IAAA,CAACP,gBAAgB;UAAC2E,KAAK,EAAEC,MAAM,CAAC8B,MAAO;UAAChB,OAAO,EAAEvC,SAAU;UAAA2B,QAAA,EACzDvE,IAAA,CAACJ,IAAI;YAACwE,KAAK,EAAEC,MAAM,CAAC+B,UAAW;YAAA7B,QAAA,EAAC;UAAU,CAAM;QAAC,CACjC;MAAC,CACf,CACP;IAAA,CACD;EACH,CACG,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAG9E,UAAU,CAAC+G,MAAM,CAAC;EAC/BhC,SAAS,EAAE;IACTiB,IAAI,EAAE,CAAC;IACPE,eAAe,EAAE,MAAM;IACvBc,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDhC,GAAG,EAAE;IACHiC,KAAK,EAAE,MAAM;IACbV,MAAM,EAAE,MAAM;IACdW,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE;EACX,CAAC;EACDN,eAAe,EAAE;IACfO,QAAQ,EAAE,UAAU;IACpBF,MAAM,EAAE,EAAE;IACVD,KAAK,EAAE,MAAM;IACbF,UAAU,EAAE;EACd,CAAC;EACDtB,yBAAyB,EAAE;IACzB2B,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPJ,KAAK,EAAE,MAAM;IACbF,UAAU,EAAE;EACd,CAAC;EACDJ,MAAM,EAAE;IACNV,eAAe,EAAE,SAAS;IAC1BqB,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDb,UAAU,EAAE;IACVJ,KAAK,EAAE,OAAO;IACdkB,UAAU,EAAE,MAAM;IAClBjB,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}